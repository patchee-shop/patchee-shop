[{"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/index.js":"1","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/App.js":"2","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/reportWebVitals.js":"3","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/Context.js":"4","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/Categories.js":"5","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/Cart.js":"6","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/Catalog.js":"7","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/Tabs.js":"8","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/ProductInfo.js":"9","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ProductsInCart.js":"10","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ContactsWindow.js":"11","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ProductCard.js":"12","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/Searcher.js":"13","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ProductsList.js":"14","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/Counter.js":"15"},{"size":465,"mtime":1647972535708,"results":"16","hashOfConfig":"17"},{"size":810,"mtime":1647974692689,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1639588040756,"results":"19","hashOfConfig":"17"},{"size":6387,"mtime":1648233161990,"results":"20","hashOfConfig":"17"},{"size":3062,"mtime":1647974858357,"results":"21","hashOfConfig":"17"},{"size":3027,"mtime":1648233613686,"results":"22","hashOfConfig":"17"},{"size":1389,"mtime":1647974741600,"results":"23","hashOfConfig":"17"},{"size":2296,"mtime":1647975011354,"results":"24","hashOfConfig":"17"},{"size":2980,"mtime":1647974934412,"results":"25","hashOfConfig":"17"},{"size":711,"mtime":1648223348501,"results":"26","hashOfConfig":"17"},{"size":1925,"mtime":1647692879352,"results":"27","hashOfConfig":"17"},{"size":4650,"mtime":1647974981813,"results":"28","hashOfConfig":"17"},{"size":476,"mtime":1647868171322,"results":"29","hashOfConfig":"17"},{"size":447,"mtime":1647253864257,"results":"30","hashOfConfig":"17"},{"size":1775,"mtime":1647690209104,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"17gizxe",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/index.js",[],["69","70"],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/App.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/reportWebVitals.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/Context.js",["71","72"],"import React, { useState, useEffect } from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    \n\n    // WIDELY USED STATES\n    const [records, setRecords] = useState([])\n    const [filteredRecords, setFilteredRecords] = useState({\n        antiaging: [],\n        discounts: [],\n        facemasks: [],\n        hands: [],\n        body: [],\n        face: [],\n        wrinkles: [],\n        darkcircles: [],\n        hair: [],\n        moisture: [],\n        eyemasks: [],\n        acne: [],\n        scrubs: [],\n        other: [],\n        all: []\n    })\n    const [currentCategory, setCurrentCategory] = useState(\"all\")\n    const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || {})\n\n    // WIDELY USED FUNCTIONS\n    const additionalFilterTyping = (records) => {\n        return (records.filter(record => (\n            JSON.stringify(record).toLowerCase().includes(searcherValue.toLowerCase())\n      )))\n    }\n    const filterForCategory = (tag) => {\n        return additionalFilterTyping(records.filter(record => record.fields.Тэги.includes(tag)))\n    }\n    const filterTyping = () => {\n        return (records.filter(record => (\n            JSON.stringify(record).toLowerCase().includes(searcherValue.toLowerCase())\n        )))\n    }\n    useEffect(() => {\n        setFilteredRecords({\n            antiaging: filterForCategory(\"антивозрастное\"),\n            discounts: filterForCategory(\"скидки\"),\n            facemasks: filterForCategory(\"тканевые маски\"),\n            hands: filterForCategory(\"руки\"),\n            body: filterForCategory(\"тело\"),\n            face: [...filterForCategory(\"лицо\"), ...filterForCategory(\"под глаза\"), ...filterForCategory(\"вокруг глаз\")],\n            wrinkles: filterForCategory(\"морщины\"),\n            darkcircles: filterForCategory(\"тёмные круги\"),\n            hair: filterForCategory(\"для волос\"),\n            moisture: filterForCategory(\"увлажнение\"),\n            eyemasks: filterForCategory(\"патчи\"),\n            acne: filterForCategory(\"акне\"),\n            scrubs: filterForCategory(\"скрабы\"),\n            other: filterForCategory(\"другое\"),\n            all: records\n        })\n    }, [records])\n\n    // CONSTANTS\n    const productsAvailableBaseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\"\n    const ordersListBaseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/%D0%9E%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7%D0%BE%D0%B2\"\n\n    // CONNECTION WITH DATABASE\n    useEffect(() => {\n        fetch(productsAvailableBaseUrl, {\n            headers: {\n                'Authorization': 'Bearer keymV3iplyx82ryEd'\n            }\n        })\n            .then(res => res.json())\n            .then(data => (setRecords(data.records)))\n    }, [])\n    const insertNewOrder = (itemId, quantity, orderId, userPhone, userName) =>\n        fetch(ordersListBaseUrl, {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Bearer keymV3iplyx82ryEd',\n                'Content-Type': 'application/json'\n            },\n            body:\n            `{ \n                \"fields\": {\n                    \"Номер заказа\": \"${orderId}\",\n                    \"Скидка\": 0,\n                    \"Товар\": [\n                        \"${itemId}\"\n                    ],\n                    \"Количество\": ${quantity},\n                    \"Телефон\": \"${userPhone}\",\n                    \"Имя\": \"${userName}\"\n                }\n            }`\n        })\n\n    // SEARCHER ELEMENT\n    const [searcherValue, setSearcherValue] = useState(\"\")\n    const handleSearcher = (event) => {\n        setSearcherValue(prevValue => (\n            prevValue = event.target.value\n        ))\n    }\n    useEffect(() => {\n        setFilteredRecords({\n            antiaging: filterForCategory(\"антивозрастное\"),\n            discounts: filterForCategory(\"скидки\"),\n            facemasks: filterForCategory(\"тканевые маски\"),\n            hands: filterForCategory(\"руки\"),\n            body: filterForCategory(\"тело\"),\n            face: [...filterForCategory(\"лицо\"), ...filterForCategory(\"под глаза\"), ...filterForCategory(\"вокруг глаз\")],\n            wrinkles: filterForCategory(\"морщины\"),\n            darkcircles: filterForCategory(\"тёмные круги\"),\n            hair: filterForCategory(\"для волос\"),\n            moisture: filterForCategory(\"увлажнение\"),\n            eyemasks: filterForCategory(\"патчи\"),\n            acne: filterForCategory(\"акне\"),\n            scrubs: filterForCategory(\"скрабы\"),\n            other: filterForCategory(\"другое\"),\n            all: filterTyping()\n        })\n    }, [searcherValue])\n\n    // INTERACTIONS WITH USER AND CART PAGE\n    const [isContactsWindowShown, setIsContactsWindowShown] = useState(\"hidden\")\n    const [leftEmptyPhone, setLeftEmptyPhone] = useState(\"\")\n    const [userPhone, setUserPhone] = useState(JSON.parse(localStorage.getItem(\"userPhone\")) || \"+7\")\n    const [userName, setUserName] = useState(JSON.parse(localStorage.getItem(\"userName\")) || \"\")\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n    }, [cartItems])\n    useEffect(() => {\n        localStorage.setItem(\"userPhone\", JSON.stringify(userPhone))\n    }, [userPhone])\n    useEffect(() => {\n        localStorage.setItem(\"userName\", JSON.stringify(userName))\n    }, [userName])\n\n    return (\n        <Context.Provider value={{\n            records: filteredRecords.all,\n            filteredRecords,\n            searcherValue,\n            setSearcherValue,\n            handleSearcher,\n            currentCategory,\n            setCurrentCategory,\n            cartItems,\n            setCartItems,\n            isContactsWindowShown,\n            setIsContactsWindowShown,\n            leftEmptyPhone,\n            setLeftEmptyPhone,\n            insertNewOrder,\n            userPhone,\n            setUserPhone,\n            userName,\n            setUserName\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}\n","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/Categories.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/Cart.js",["73"],"import { useState, useContext } from \"react\"\nimport { Context } from \"../../Context\"\nimport ProductsInCart from \"../elements/ProductsInCart\";\nimport ContactsWindow from \"../elements/ContactsWindow\";\n\nexport default function Cart() {\n\n    const {\n        records,\n        userPhone,\n        userName,\n        cartItems,\n        setCartItems,\n        setIsContactsWindowShown,\n        setLeftEmptyPhone,\n        insertNewOrder\n    } = useContext(Context)\n\n    const [cartStatus, setCartStatus] = useState(\"Пока что в корзине пусто!\")\n    \n    const sum = records.length != 0? (Object.keys(cartItems).length?\n        Object.entries(cartItems).map(([key, value]) => (\n            Object.keys(records.filter(r => r.id === key)[0].fields).length?\n                records.filter(r => r.id === key)[0].fields.Цена * value : 0\n        )).reduce((a, b) => a + b) : 0) : 0\n\n    const conveyAllCartItems = (cartItems, orderId, userPhone, userName) => {\n        Object.entries(cartItems).map(([key, value]) => (\n            insertNewOrder(key, value, orderId, userPhone, userName)\n        ))\n    }\n\n    const requestOrder = () => {\n        conveyAllCartItems(cartItems, Date.now(), userPhone, userName)\n        setCartItems({})\n        setIsContactsWindowShown(\"hidden\")\n        setLeftEmptyPhone(\"\")\n        setCartStatus(\n            <>\n                <p className=\"waiting-for-checking\">\n                    Ваш заказ обрабатывается 💕\n                </p>\n                <p className=\"will-contact-soon\">\n                    Скоро с Вами свяжемся!\n                </p>\n                <a\n                    className=\"patchee-shop-phone\"\n                    href=\"tel:+79118212238\"\n                >\n                    +7(911)-821-22-38\n                </a>\n            </>\n        )\n    }\n\n    return (\n        <div className=\"section-view cart\">\n            <ContactsWindow requestOrder={requestOrder}/>\n            <div className=\"fix-wrapper\">\n                <h1 className='section-title'>Корзина</h1>\n            </div>\n            <div className=\"wrapper cart-wrapper\">\n                <ProductsInCart />\n                <div className=\"cart--summary\">\n                    { Object.keys(cartItems).length?\n                    <>\n                        <p className=\"cart--summary__info\">\n                            Сумма:\n                            <span className=\"sum\"> {sum} ₽</span>\n                        </p>\n                        <button\n                            className=\"cart--summary__order\"\n                            onClick={() => setIsContactsWindowShown(\"\")}\n                        >\n                            Сделать закaз\n                        </button>\n                    </> :\n                        <div className=\"cart--summary__empty\">\n                            {cartStatus}\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/Catalog.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/Tabs.js",[],["74","75"],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/pages/ProductInfo.js",["76"],"import { Context } from '../../Context'\nimport { Link, useParams } from 'react-router-dom'\nimport ProductCard from '../elements/ProductCard'\nimport { useContext } from 'react'\n\nexport default function ProductInfo() {\n\n    const {records, currentCategory} = useContext(Context)\n    const params = useParams()\n    const chosenRecord = records[records.findIndex(el => el.id === params.id)]\n\n    return (\n        <div className=\"section-view product-info\">\n            <div className=\"fix-wrapper\">\n                <div className='back'>\n                <Link to={process.env.PUBLIC_URL + `/catalog/${currentCategory}`}>\n                    <svg width=\"15.127\" height=\"23.983\" viewBox=\"0 0 15.127 23.983\">\n                        <path d=\"M18.141.857,6,13,17.841,24.84l2.985-2.985L11.969,13l9.158-9.158Z\" transform=\"translate(-6 -0.857)\" fillRule=\"evenodd\"/>\n                    </svg>\n                </Link>\n                <Link to={process.env.PUBLIC_URL + `/catalog/${currentCategory}`}>\n                    <h3>Назад</h3>\n                </Link>\n                </div>\n            </div>\n            {\n                (records.length != 0) && \n                <>\n                    <ProductCard\n                        record={chosenRecord}\n                        view={\"big\"}\n                    />\n                    <div className=\"text-information\">\n                        { chosenRecord.fields.Описание &&\n                            <article>\n                                <h3>Описание</h3>\n                                <p>{chosenRecord.fields.Описание}</p>\n                            </article>\n                        }\n                        { chosenRecord.fields['Способ применения'] &&\n                            <article>\n                                <h3>Способ применения</h3>\n                                <p>{chosenRecord.fields['Способ применения']}</p>\n                            </article>\n                        }\n                        { chosenRecord.fields.Бренд &&\n                            <article>\n                                <h3>Бренд</h3>\n                                <p>{chosenRecord.fields.Бренд}</p>\n                            </article>\n                        }\n                        { chosenRecord.fields.Объём &&\n                            <article>\n                                <h3>Объём</h3>\n                                <p>{chosenRecord.fields.Объём}</p>\n                            </article>\n                        }\n                        { chosenRecord.fields.Тэги &&\n                            <article>\n                                <h3>Теги</h3>\n                                <p>{chosenRecord.fields.Тэги.join(', ')}</p>\n                            </article>\n                        }\n                    </div>\n                </>\n            }\n        </div>\n    )\n}","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ProductsInCart.js",["77"],"import ProductCard from '../elements/ProductCard'\nimport { useContext } from 'react'\nimport { Context } from \"../../Context\"\n\nfunction ProductsInCart() {\n\n    const {cartItems, records} = useContext(Context)\n    const productsInCart = records.length != 0 &&\n        Object.entries(cartItems).map(([key, value]) => (\n            <ProductCard\n                categoryName={\"all\"}\n                record={records.filter(r => r.id === key)[0]}\n                key={key}\n                view={\"row\"}\n            />\n        ))\n\n    return (\n        <div className={`products-in-cart ${Object.keys(cartItems).length? \"\" : \"hidden\"}`}>\n            {productsInCart}\n        </div>\n    );\n}\n\nexport default ProductsInCart","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ContactsWindow.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ProductCard.js",["78","79","80","81","82"],"import { useState, useContext, useEffect } from 'react'\nimport { Context } from '../../Context'\nimport { Link } from 'react-router-dom'\nimport Counter from './Counter'\n\nexport default function ProductCard({categoryName, view, ...props}) {\n\n    const {setCurrentCategory, cartItems, setCartItems} = useContext(Context)\n    const [productCardParams, setProductCardParams] = useState({\n        picture: props.record.fields.Фото[0].url,\n        name: props.record.fields.Название,\n        addition: props.record.fields.Дополнение,\n        price: props.record.fields.Цена,\n        id: props.record.id\n    })\n    const addFirstItem = () => {\n        setCartItems(prev => (\n            {\n                ...prev,\n                [productCardParams.id]: 1\n            }\n        ))\n    }\n    const [isInCart, setIsInCart] = useState(\"\")\n\n    useEffect(() => {\n        setCurrentCategory (\n            prev => prev === \"\"? \"all\" :\n            categoryName === undefined? prev :\n            categoryName\n        )\n    }, [])\n    useEffect(() => {\n        setIsInCart(productCardParams.id in cartItems? \"\" : \"not-in-cart\")\n    }, [cartItems])\n\n    return (\n        <div className={`${view} ${isInCart} product-card`}>\n            <div className='wrapper info-wrapper'>\n                <Link to={process.env.PUBLIC_URL + `/product_info/${props.record.id}`}>\n                    <img src={productCardParams.picture}/>\n                </Link>\n                <div className='product-card--info wrapper'>\n                    <h2 className='info--name'>{productCardParams.name}</h2>\n                    <h3 className='info--addition'>{productCardParams.addition}</h3>\n                </div>\n            </div>\n            <div className={`product-card--info wrapper counter-wrapper ${view}`}>\n                <div className='product-card--buttons'>\n                    {view == \"small\"?\n                        !cartItems[productCardParams.id]?\n                            <button onClick={addFirstItem} disabled={cartItems[productCardParams.id]} className='add-to-card'>\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                                    <g>\n                                        <g>\n                                            <g>\n                                                <rect width=\"16\" height=\"16\" fill=\"rgba(255,255,255,0)\"/>\n                                            </g>\n                                        </g>\n                                    </g>\n                                    <g transform=\"translate(2 -0.25)\">\n                                        <path d=\"M15.5,11.25a.4.4,0,0,1,.4.4v1.6a.4.4,0,0,1-.4.4H13.9a.4.4,0,0,1,0-.8h1.2v-1.2A.4.4,0,0,1,15.5,11.25Z\" transform=\"translate(-8.7 -5.8)\" fill=\"#fff\" fillRule=\"evenodd\"/>\n                                        <path d=\"M18,16.15a.4.4,0,0,1,.4-.4H20a.4.4,0,1,1,0,.8H18.8v1.2a.4.4,0,0,1-.8,0Z\" transform=\"translate(-11.6 -8.7)\" fill=\"#fff\" fillRule=\"evenodd\"/>\n                                        <path d=\"M0,2.65a.4.4,0,0,1,.4-.4H1.6a.4.4,0,0,1,.388.3l.324,1.3H11.6a.4.4,0,0,1,.393.474l-1.2,6.4a.4.4,0,0,1-.393.326H3.2a.4.4,0,0,1-.393-.326l-1.2-6.388L1.288,3.05H.4A.4.4,0,0,1,0,2.65Zm2.481,2,1.05,5.6h6.536l1.05-5.6ZM4,11.05a1.6,1.6,0,1,0,1.6,1.6A1.6,1.6,0,0,0,4,11.05Zm5.6,0a1.6,1.6,0,1,0,1.6,1.6A1.6,1.6,0,0,0,9.6,11.05Zm-5.6.8a.8.8,0,1,0,.8.8A.8.8,0,0,0,4,11.85Zm5.6,0a.8.8,0,1,0,.8.8A.8.8,0,0,0,9.6,11.85Z\" fill=\"#fff\" fillRule=\"evenodd\"/>\n                                    </g>\n                                </svg>\n                            </button>\n                        :\n                            <Counter recordId={productCardParams.id}/>\n                    :\n                        !cartItems[productCardParams.id]?\n                            <button onClick={addFirstItem} disabled={cartItems[productCardParams.id]} className='add-to-card'>Добавить в корзину</button>\n                        :\n                            <>\n                            <button onClick={addFirstItem} disabled={cartItems[productCardParams.id]} className='add-to-card'>В корзине</button>\n                            <Counter recordId={productCardParams.id}/>\n                            </>\n                    }\n                </div>\n                <p className='product-card--price'>\n                    { cartItems[productCardParams.id]?\n                        productCardParams.price * cartItems[productCardParams.id] :\n                        productCardParams.price\n                    } ₽\n                </p>\n            </div>\n        </div>\n    )\n}","/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/Searcher.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/ProductsList.js",[],"/Users/nikitaspiridonov/Desktop/Patchee Shop/src/components/elements/Counter.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":62,"column":8,"nodeType":"89","endLine":62,"endColumn":17,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":125,"column":8,"nodeType":"89","endLine":125,"endColumn":23,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":21,"column":32,"nodeType":"95","messageId":"96","endLine":21,"endColumn":34},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},{"ruleId":"93","severity":1,"message":"94","line":27,"column":33,"nodeType":"95","messageId":"96","endLine":27,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":8,"column":43,"nodeType":"95","messageId":"96","endLine":8,"endColumn":45},{"ruleId":"99","severity":1,"message":"100","line":9,"column":31,"nodeType":"101","messageId":"102","endLine":9,"endColumn":51},{"ruleId":"87","severity":1,"message":"103","line":32,"column":8,"nodeType":"89","endLine":32,"endColumn":10,"suggestions":"104"},{"ruleId":"87","severity":1,"message":"105","line":35,"column":8,"nodeType":"89","endLine":35,"endColumn":19,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":41,"column":21,"nodeType":"109","endLine":41,"endColumn":59},{"ruleId":"93","severity":1,"message":"110","line":50,"column":27,"nodeType":"95","messageId":"96","endLine":50,"endColumn":29},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterForCategory'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'filterForCategory' and 'filterTyping'. Either include them or remove the dependency array.",["114"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["111"],["112"],"no-unused-vars","'setProductCardParams' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'categoryName' and 'setCurrentCategory'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'productCardParams.id'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsInCart' needs the current value of 'productCardParams.id'.",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [filterForCategory, records]",{"range":"125","text":"126"},"Update the dependencies array to be: [filterForCategory, filterTyping, searcherValue]",{"range":"127","text":"128"},"Update the dependencies array to be: [categoryName, setCurrentCategory]",{"range":"129","text":"130"},"Update the dependencies array to be: [cartItems, productCardParams.id]",{"range":"131","text":"132"},[2189,2198],"[filterForCategory, records]",[4692,4707],"[filterForCategory, filterTyping, searcherValue]",[1010,1012],"[categoryName, setCurrentCategory]",[1118,1129],"[cartItems, productCardParams.id]"]