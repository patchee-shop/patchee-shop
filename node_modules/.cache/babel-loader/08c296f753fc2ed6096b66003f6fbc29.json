{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaspiridonov/Documents/Patchee Shop/my-app/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [records, setRecords] = useState([]);\n  const [filteredRecords, setFilteredRecords] = useState({\n    antiaging: [],\n    discounts: [],\n    facemasks: [],\n    hands: [],\n    body: [],\n    face: [],\n    wrinkles: [],\n    darkcircles: [],\n    hair: [],\n    moisture: [],\n    eyemasks: [],\n    acne: [],\n    scrubs: [],\n    other: [],\n    all: []\n  });\n  const [searcherValue, setSearcherValue] = useState(\"\");\n  const [currentCategory, setCurrentCategory] = useState(\"all\");\n  const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || {});\n  useEffect(() => {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n  const productsAvailableBaseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\";\n  const ordersListBaseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/%D0%9E%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7%D0%BE%D0%B2\";\n  /*\n  curl -v -X POST https://api.airtable.com/v0/appduyTcvGxpEgTb8/%D0%9E%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7%D0%BE%D0%B2 \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n  \"fields\": {\n      \"Скидка\": 0,\n      \"Товар\": [\n      \"reczU6dAq47UdYP01\"\n      ],\n      \"Количество\": 1,\n      \"Заказ был оформлен\": \"Администратором\"\n  }\n  }'\n  */\n\n  useEffect(() => {\n    fetch(ordersListBaseUrl, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer keymV3iplyx82ryEd'\n      }\n    }).then(res => res.json()).then(data => setRecords(data.records));\n  }, []);\n  useEffect(() => {\n    fetch(productsAvailableBaseUrl, {\n      headers: {\n        'Authorization': 'Bearer keymV3iplyx82ryEd'\n      }\n    }).then(res => res.json()).then(data => setRecords(data.records));\n  }, []);\n\n  const additionalFilterTyping = records => {\n    return records.filter(record => JSON.stringify(record).toLowerCase().includes(searcherValue.toLowerCase()));\n  };\n\n  const filterForCategory = tag => {\n    return additionalFilterTyping(records.filter(record => record.fields.Тэги.includes(tag)));\n  };\n\n  const filterTyping = () => {\n    return records.filter(record => JSON.stringify(record).toLowerCase().includes(searcherValue.toLowerCase()));\n  };\n\n  useEffect(() => {\n    setFilteredRecords({\n      antiaging: filterForCategory(\"антивозрастное\"),\n      discounts: filterForCategory(\"скидки\"),\n      facemasks: filterForCategory(\"тканевые маски\"),\n      hands: filterForCategory(\"руки\"),\n      body: filterForCategory(\"тело\"),\n      face: [...filterForCategory(\"лицо\"), ...filterForCategory(\"под глаза\"), ...filterForCategory(\"вокруг глаз\")],\n      wrinkles: filterForCategory(\"морщины\"),\n      darkcircles: filterForCategory(\"тёмные круги\"),\n      hair: filterForCategory(\"для волос\"),\n      moisture: filterForCategory(\"увлажнение\"),\n      eyemasks: filterForCategory(\"патчи\"),\n      acne: filterForCategory(\"акне\"),\n      scrubs: filterForCategory(\"скрабы\"),\n      other: filterForCategory(\"другое\"),\n      all: records\n    });\n  }, [records]);\n\n  const handleSearcher = event => {\n    setSearcherValue(prevValue => prevValue = event.target.value);\n  };\n\n  useEffect(() => {\n    setFilteredRecords({\n      antiaging: filterForCategory(\"антивозрастное\"),\n      discounts: filterForCategory(\"скидки\"),\n      facemasks: filterForCategory(\"тканевые маски\"),\n      hands: filterForCategory(\"руки\"),\n      body: filterForCategory(\"тело\"),\n      face: [...filterForCategory(\"лицо\"), ...filterForCategory(\"под глаза\"), ...filterForCategory(\"вокруг глаз\")],\n      wrinkles: filterForCategory(\"морщины\"),\n      darkcircles: filterForCategory(\"тёмные круги\"),\n      hair: filterForCategory(\"для волос\"),\n      moisture: filterForCategory(\"увлажнение\"),\n      eyemasks: filterForCategory(\"патчи\"),\n      acne: filterForCategory(\"акне\"),\n      scrubs: filterForCategory(\"скрабы\"),\n      other: filterForCategory(\"другое\"),\n      all: filterTyping()\n    });\n  }, [searcherValue]);\n  const [isContactsWindowShown, setIsContactsWindowShown] = useState(\"hidden\");\n  const [leftEmptyPhone, setLeftEmptyPhone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      records: filteredRecords.all,\n      filteredRecords,\n      searcherValue,\n      setSearcherValue,\n      handleSearcher,\n      currentCategory,\n      setCurrentCategory,\n      cartItems,\n      setCartItems,\n      isContactsWindowShown,\n      setIsContactsWindowShown,\n      leftEmptyPhone,\n      setLeftEmptyPhone\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"M2yMUIkH8TSTwNC/7wFV3nzw3kk=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/nikitaspiridonov/Documents/Patchee Shop/my-app/src/Context.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","records","setRecords","filteredRecords","setFilteredRecords","antiaging","discounts","facemasks","hands","body","face","wrinkles","darkcircles","hair","moisture","eyemasks","acne","scrubs","other","all","searcherValue","setSearcherValue","currentCategory","setCurrentCategory","cartItems","setCartItems","JSON","parse","localStorage","getItem","setItem","stringify","productsAvailableBaseUrl","ordersListBaseUrl","fetch","method","headers","then","res","json","data","additionalFilterTyping","filter","record","toLowerCase","includes","filterForCategory","tag","fields","Тэги","filterTyping","handleSearcher","event","prevValue","target","value","isContactsWindowShown","setIsContactsWindowShown","leftEmptyPhone","setLeftEmptyPhone"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n\n    const [records, setRecords] = useState([])\n\n    const [filteredRecords, setFilteredRecords] = useState({\n        antiaging: [],\n        discounts: [],\n        facemasks: [],\n        hands: [],\n        body: [],\n        face: [],\n        wrinkles: [],\n        darkcircles: [],\n        hair: [],\n        moisture: [],\n        eyemasks: [],\n        acne: [],\n        scrubs: [],\n        other: [],\n        all: []\n    })\n    const [searcherValue, setSearcherValue] = useState(\"\")\n    const [currentCategory, setCurrentCategory] = useState(\"all\")\n    const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || {})\n\n    useEffect(() => {\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems))\n    }, [cartItems])\n\n    const productsAvailableBaseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\"\n\n    const ordersListBaseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/%D0%9E%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7%D0%BE%D0%B2\"\n\n    /*\n    curl -v -X POST https://api.airtable.com/v0/appduyTcvGxpEgTb8/%D0%9E%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7%D0%BE%D0%B2 \\\n    -H \"Authorization: Bearer YOUR_API_KEY\" \\\n    -H \"Content-Type: application/json\" \\\n    --data '{\n    \"fields\": {\n        \"Скидка\": 0,\n        \"Товар\": [\n        \"reczU6dAq47UdYP01\"\n        ],\n        \"Количество\": 1,\n        \"Заказ был оформлен\": \"Администратором\"\n    }\n    }'\n    */\n\n    useEffect(() => {\n        fetch(ordersListBaseUrl, {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Bearer keymV3iplyx82ryEd'\n            }\n        })\n            .then(res => res.json())\n            .then(data => (setRecords(data.records)))\n    }, [])\n  \n      useEffect(() => {\n          fetch(productsAvailableBaseUrl, {\n              headers: {\n                  'Authorization': 'Bearer keymV3iplyx82ryEd'\n              }\n          })\n              .then(res => res.json())\n              .then(data => (setRecords(data.records)))\n      }, [])\n\n      const additionalFilterTyping = (records) => {\n        return (records.filter(record => (\n          JSON.stringify(record).toLowerCase().includes(searcherValue.toLowerCase())\n      )))\n    }\n\n      const filterForCategory = (tag) => {\n          return additionalFilterTyping(records.filter(record => record.fields.Тэги.includes(tag)))\n      }\n\n      const filterTyping = () => {\n          return (records.filter(record => (\n            JSON.stringify(record).toLowerCase().includes(searcherValue.toLowerCase())\n        )))\n      }\n\n      useEffect(() => {\n        setFilteredRecords({\n            antiaging: filterForCategory(\"антивозрастное\"),\n            discounts: filterForCategory(\"скидки\"),\n            facemasks: filterForCategory(\"тканевые маски\"),\n            hands: filterForCategory(\"руки\"),\n            body: filterForCategory(\"тело\"),\n            face: [...filterForCategory(\"лицо\"), ...filterForCategory(\"под глаза\"), ...filterForCategory(\"вокруг глаз\")],\n            wrinkles: filterForCategory(\"морщины\"),\n            darkcircles: filterForCategory(\"тёмные круги\"),\n            hair: filterForCategory(\"для волос\"),\n            moisture: filterForCategory(\"увлажнение\"),\n            eyemasks: filterForCategory(\"патчи\"),\n            acne: filterForCategory(\"акне\"),\n            scrubs: filterForCategory(\"скрабы\"),\n            other: filterForCategory(\"другое\"),\n            all: records\n        })\n      }, [records])\n\n    const handleSearcher = (event) => {\n        setSearcherValue(prevValue => (\n            prevValue = event.target.value\n        ))\n    }\n\n    useEffect(() => {\n        setFilteredRecords({\n            antiaging: filterForCategory(\"антивозрастное\"),\n            discounts: filterForCategory(\"скидки\"),\n            facemasks: filterForCategory(\"тканевые маски\"),\n            hands: filterForCategory(\"руки\"),\n            body: filterForCategory(\"тело\"),\n            face: [...filterForCategory(\"лицо\"), ...filterForCategory(\"под глаза\"), ...filterForCategory(\"вокруг глаз\")],\n            wrinkles: filterForCategory(\"морщины\"),\n            darkcircles: filterForCategory(\"тёмные круги\"),\n            hair: filterForCategory(\"для волос\"),\n            moisture: filterForCategory(\"увлажнение\"),\n            eyemasks: filterForCategory(\"патчи\"),\n            acne: filterForCategory(\"акне\"),\n            scrubs: filterForCategory(\"скрабы\"),\n            other: filterForCategory(\"другое\"),\n            all: filterTyping()\n        })\n      }, [searcherValue])\n\n      const [isContactsWindowShown, setIsContactsWindowShown] = useState(\"hidden\")\n      const [leftEmptyPhone, setLeftEmptyPhone] = useState(\"\")\n\n\n    return (\n        <Context.Provider value={{\n            records: filteredRecords.all,\n            filteredRecords,\n            searcherValue,\n            setSearcherValue,\n            handleSearcher,\n            currentCategory,\n            setCurrentCategory,\n            cartItems,\n            setCartItems,\n            isContactsWindowShown,\n            setIsContactsWindowShown,\n            leftEmptyPhone,\n            setLeftEmptyPhone\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}