{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaspiridonov/Documents/Patchee Shop/my-app/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [records, setRecords] = useState([]);\n  const [safeRecords, setSafeRecords] = useState([]);\n  const [searcherValue, setSearcherValue] = useState(\"\");\n  const baseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\";\n  useEffect(() => {\n    fetch(baseUrl, {\n      headers: {\n        'Authorization': 'Bearer keymV3iplyx82ryEd'\n      }\n    }).then(res => res.json()).then(data => setRecords(data.records));\n  }, []);\n\n  const handleSearcher = event => {\n    setSearcherValue(prevValue => prevValue = event.target.value); //if (searcherValue === \"\") {\n    //    setRecords(safeRecords)\n    //} else {\n    //    setRecords(safeRecords.filter(record => (\n    //        record.fields.Название.includes(searcherValue)\n    //    )))\n    //}\n  };\n\n  useEffect(() => {\n    setSafeRecords(records);\n\n    if (searcherValue == \"\") {\n      setRecords(safeRecords);\n    } else {\n      setRecords(records.filter(record => record.fields.Название.includes(searcherValue)));\n    }\n  }, [searcherValue]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      records,\n      searcherValue,\n      setSearcherValue,\n      handleSearcher,\n      safeRecords,\n      records\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"4UiW5+yDHEOxcE/NvX4k+FjrODM=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/nikitaspiridonov/Documents/Patchee Shop/my-app/src/Context.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","records","setRecords","safeRecords","setSafeRecords","searcherValue","setSearcherValue","baseUrl","fetch","headers","then","res","json","data","handleSearcher","event","prevValue","target","value","filter","record","fields","Название","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,OAAqC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAEjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAGA,QAAMY,OAAO,GAAG,wHAAhB;AAEEX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAACD,OAAD,EAAU;AACXE,MAAAA,OAAO,EAAE;AACL,yBAAiB;AADZ;AADE,KAAV,CAAL,CAKKC,IALL,CAKUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALjB,EAMKF,IANL,CAMUG,IAAI,IAAIX,UAAU,CAACW,IAAI,CAACZ,OAAN,CAN5B;AAOH,GARQ,EAQN,EARM,CAAT;;AAUF,QAAMa,cAAc,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,gBAAgB,CAACU,SAAS,IACtBA,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KADb,CAAhB,CAD8B,CAK9B;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAZD;;AAcAtB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,cAAc,CAACH,OAAD,CAAd;;AACA,QAAII,aAAa,IAAI,EAArB,EAAyB;AACrBH,MAAAA,UAAU,CAACC,WAAD,CAAV;AACH,KAFD,MAEO;AACHD,MAAAA,UAAU,CAACD,OAAO,CAACkB,MAAR,CAAeC,MAAM,IAC5BA,MAAM,CAACC,MAAP,CAAcC,QAAd,CAAuBC,QAAvB,CAAgClB,aAAhC,CADO,CAAD,CAAV;AAGH;AACJ,GATQ,EASN,CAACA,aAAD,CATM,CAAT;AAYA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACrBJ,MAAAA,OADqB;AAErBI,MAAAA,aAFqB;AAGrBC,MAAAA,gBAHqB;AAIrBQ,MAAAA,cAJqB;AAKrBX,MAAAA,WALqB;AAMrBF,MAAAA;AANqB,KAAzB;AAAA,cAQKD;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAzDQD,e;;KAAAA,e;AA2DT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [records, setRecords] = useState([])\n    const [safeRecords, setSafeRecords] = useState([])\n    const [searcherValue, setSearcherValue] = useState(\"\")\n\n\n    const baseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\"\n  \n      useEffect(() => {\n          fetch(baseUrl, {\n              headers: {\n                  'Authorization': 'Bearer keymV3iplyx82ryEd'\n              }\n          })\n              .then(res => res.json())\n              .then(data => setRecords(data.records))\n      }, [])\n\n    const handleSearcher = (event) => {\n        setSearcherValue(prevValue => (\n            prevValue = event.target.value\n        ))\n\n        //if (searcherValue === \"\") {\n        //    setRecords(safeRecords)\n        //} else {\n        //    setRecords(safeRecords.filter(record => (\n        //        record.fields.Название.includes(searcherValue)\n        //    )))\n        //}\n    }\n\n    useEffect(() => {\n        setSafeRecords(records)\n        if (searcherValue == \"\") {\n            setRecords(safeRecords)\n        } else {\n            setRecords(records.filter(record => (\n                record.fields.Название.includes(searcherValue)\n            )))\n        }\n    }, [searcherValue])\n\n\n    return (\n        <Context.Provider value={{\n            records,\n            searcherValue,\n            setSearcherValue,\n            handleSearcher,\n            safeRecords,\n            records\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}