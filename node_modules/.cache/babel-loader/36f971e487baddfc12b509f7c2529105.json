{"ast":null,"code":"function process(decl, _ref) {\n  let {\n    AtRule,\n    Rule\n  } = _ref;\n  if (decl.value !== '100vh') return;\n  let rule = decl.parent;\n  let media = new AtRule({\n    name: 'supports',\n    params: '(-webkit-touch-callout: none)',\n    source: decl.source\n  });\n  rule.after(media);\n  let clonedRule = new Rule({\n    selector: rule.selector,\n    source: rule.source\n  });\n  media.append(clonedRule);\n  clonedRule.append({\n    prop: decl.prop,\n    value: '-webkit-fill-available',\n    source: decl.source\n  });\n}\n\nmodule.exports = () => {\n  return {\n    postcssPlugin: 'postcss-100vh-fix',\n    Declaration: {\n      'min-height': process,\n      'max-height': process,\n      'height': process\n    }\n  };\n};\n\nmodule.exports.postcss = true;","map":{"version":3,"sources":["/Users/nikitaspiridonov/Desktop/Patchee Shop/node_modules/postcss-100vh-fix/index.js"],"names":["process","decl","AtRule","Rule","value","rule","parent","media","name","params","source","after","clonedRule","selector","append","prop","module","exports","postcssPlugin","Declaration","postcss"],"mappings":"AAAA,SAASA,OAAT,CAAkBC,IAAlB,QAA0C;AAAA,MAAlB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAkB;AACxC,MAAIF,IAAI,CAACG,KAAL,KAAe,OAAnB,EAA4B;AAC5B,MAAIC,IAAI,GAAGJ,IAAI,CAACK,MAAhB;AAEA,MAAIC,KAAK,GAAG,IAAIL,MAAJ,CAAW;AACrBM,IAAAA,IAAI,EAAE,UADe;AAErBC,IAAAA,MAAM,EAAE,+BAFa;AAGrBC,IAAAA,MAAM,EAAET,IAAI,CAACS;AAHQ,GAAX,CAAZ;AAKAL,EAAAA,IAAI,CAACM,KAAL,CAAWJ,KAAX;AAEA,MAAIK,UAAU,GAAG,IAAIT,IAAJ,CAAS;AACxBU,IAAAA,QAAQ,EAAER,IAAI,CAACQ,QADS;AAExBH,IAAAA,MAAM,EAAEL,IAAI,CAACK;AAFW,GAAT,CAAjB;AAIAH,EAAAA,KAAK,CAACO,MAAN,CAAaF,UAAb;AAEAA,EAAAA,UAAU,CAACE,MAAX,CAAkB;AAChBC,IAAAA,IAAI,EAAEd,IAAI,CAACc,IADK;AAEhBX,IAAAA,KAAK,EAAE,wBAFS;AAGhBM,IAAAA,MAAM,EAAET,IAAI,CAACS;AAHG,GAAlB;AAKD;;AAEDM,MAAM,CAACC,OAAP,GAAiB,MAAM;AACrB,SAAO;AACLC,IAAAA,aAAa,EAAE,mBADV;AAELC,IAAAA,WAAW,EAAE;AACX,oBAAcnB,OADH;AAEX,oBAAcA,OAFH;AAGX,gBAAUA;AAHC;AAFR,GAAP;AAQD,CATD;;AAUAgB,MAAM,CAACC,OAAP,CAAeG,OAAf,GAAyB,IAAzB","sourcesContent":["function process (decl, { AtRule, Rule }) {\n  if (decl.value !== '100vh') return\n  let rule = decl.parent\n\n  let media = new AtRule({\n    name: 'supports',\n    params: '(-webkit-touch-callout: none)',\n    source: decl.source\n  })\n  rule.after(media)\n\n  let clonedRule = new Rule({\n    selector: rule.selector,\n    source: rule.source\n  })\n  media.append(clonedRule)\n\n  clonedRule.append({\n    prop: decl.prop,\n    value: '-webkit-fill-available',\n    source: decl.source\n  })\n}\n\nmodule.exports = () => {\n  return {\n    postcssPlugin: 'postcss-100vh-fix',\n    Declaration: {\n      'min-height': process,\n      'max-height': process,\n      'height': process\n    }\n  }\n}\nmodule.exports.postcss = true\n"]},"metadata":{},"sourceType":"script"}