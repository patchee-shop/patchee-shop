{"ast":null,"code":"var _jsxFileName = \"/Users/nikitaspiridonov/Documents/Patchee Shop/my-app/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [records, setRecords] = useState([]);\n  const [filteredRecords, setFilteredRecords] = useState([]);\n  const [searcherValue, setSearcherValue] = useState(\"\");\n  const baseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\";\n  useEffect(() => {\n    fetch(baseUrl, {\n      headers: {\n        'Authorization': 'Bearer keymV3iplyx82ryEd'\n      }\n    }).then(res => res.json()).then(data => setRecords(data.records));\n  }, []);\n  /* useEffect(() => {\n    setFilteredRecords(records)\n  }, [records]) */\n\n  const handleSearcher = event => {\n    setSearcherValue(prevValue => prevValue = event.target.value);\n  };\n\n  setFilteredRecords(records.filter(record => record.fields.Название.includes(searcherValue)));\n  /*  useEffect(() => {\n       setSafeRecords(records)\n       if (searcherValue == \"\") {\n           setRecords(safeRecords)\n       } else {\n           setRecords(records.filter(record => (\n               record.fields.Название.includes(searcherValue)\n           )))\n       }\n   }, [searcherValue]) */\n\n  console.log(filteredRecords);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      records,\n      searcherValue,\n      setSearcherValue,\n      handleSearcher,\n      filteredRecords,\n      records\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"O/n7T6RScbkHkua4PkVn9QcyQ2Y=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/nikitaspiridonov/Documents/Patchee Shop/my-app/src/Context.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","records","setRecords","filteredRecords","setFilteredRecords","searcherValue","setSearcherValue","baseUrl","fetch","headers","then","res","json","data","handleSearcher","event","prevValue","target","value","filter","record","fields","Название","includes","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,OAAqC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAEjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAGA,QAAMY,OAAO,GAAG,wHAAhB;AAEEX,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAACD,OAAD,EAAU;AACXE,MAAAA,OAAO,EAAE;AACL,yBAAiB;AADZ;AADE,KAAV,CAAL,CAKKC,IALL,CAKUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALjB,EAMKF,IANL,CAMUG,IAAI,IAAKX,UAAU,CAACW,IAAI,CAACZ,OAAN,CAN7B;AAOH,GARQ,EAQN,EARM,CAAT;AAUA;AACN;AACA;;AAEI,QAAMa,cAAc,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,gBAAgB,CAACU,SAAS,IACtBA,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KADb,CAAhB;AAGH,GAJD;;AAMAd,EAAAA,kBAAkB,CAACH,OAAO,CAACkB,MAAR,CAAeC,MAAM,IACpCA,MAAM,CAACC,MAAP,CAAcC,QAAd,CAAuBC,QAAvB,CAAgClB,aAAhC,CADe,CAAD,CAAlB;AAID;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEImB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,eAAZ;AAEA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACrBF,MAAAA,OADqB;AAErBI,MAAAA,aAFqB;AAGrBC,MAAAA,gBAHqB;AAIrBQ,MAAAA,cAJqB;AAKrBX,MAAAA,eALqB;AAMrBF,MAAAA;AANqB,KAAzB;AAAA,cAQKD;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1DQD,e;;KAAAA,e;AA4DT,SAAQA,eAAR,EAAyBF,OAAzB","sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n\n    const [records, setRecords] = useState([])\n    const [filteredRecords, setFilteredRecords] = useState([])\n    const [searcherValue, setSearcherValue] = useState(\"\")\n\n\n    const baseUrl = \"https://api.airtable.com/v0/appduyTcvGxpEgTb8/tblMpliaVkCLsiKnC?view=%D0%92+%D0%BD%D0%B0%D0%BB%D0%B8%D1%87%D0%B8%D0%B8\"\n  \n      useEffect(() => {\n          fetch(baseUrl, {\n              headers: {\n                  'Authorization': 'Bearer keymV3iplyx82ryEd'\n              }\n          })\n              .then(res => res.json())\n              .then(data => (setRecords(data.records)))\n      }, [])\n\n      /* useEffect(() => {\n        setFilteredRecords(records)\n      }, [records]) */\n\n    const handleSearcher = (event) => {\n        setSearcherValue(prevValue => (\n            prevValue = event.target.value\n        ))\n    }\n\n    setFilteredRecords(records.filter(record => (\n        record.fields.Название.includes(searcherValue)\n    )))\n\n   /*  useEffect(() => {\n        setSafeRecords(records)\n        if (searcherValue == \"\") {\n            setRecords(safeRecords)\n        } else {\n            setRecords(records.filter(record => (\n                record.fields.Название.includes(searcherValue)\n            )))\n        }\n    }, [searcherValue]) */\n\n    console.log(filteredRecords)\n\n    return (\n        <Context.Provider value={{\n            records,\n            searcherValue,\n            setSearcherValue,\n            handleSearcher,\n            filteredRecords,\n            records\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"]},"metadata":{},"sourceType":"module"}